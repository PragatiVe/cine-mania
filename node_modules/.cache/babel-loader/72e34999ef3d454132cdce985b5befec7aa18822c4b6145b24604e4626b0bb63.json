{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = '64f9bdeee5357628887f2f71b6314b04';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst fetchResultsPage = async endpoint => {\n  try {\n    const url = `${BASE_URL}${endpoint}&api_key=${API_KEY}`;\n    console.log('Request URL:', url);\n    const response = await axios.get(url);\n    console.log('API Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\n    return null;\n  }\n};\nconst fetchMovies = async endpoint => {\n  try {\n    const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\n    console.log('Request URL:', url);\n    const response = await axios.get(url);\n    console.log('API Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\n    return null;\n  }\n};\nconst fetchDetails = async endpoint => {\n  const response = await fetch(`https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n};\nexport const fetchLatestMovies = async (page = 1) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/discover/movie`, {\n      params: {\n        api_key: API_KEY,\n        sort_by: 'release_date.desc',\n        page: page,\n        include_adult: false\n      }\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching latest movies:', error);\n    throw error;\n  }\n};\nexport const fetchNowPlayingMovies = async () => {\n  return await fetchMovies('/movie/now_playing');\n};\nexport { fetchMovies, fetchResultsPage, fetchDetails };","map":{"version":3,"names":["axios","API_KEY","BASE_URL","fetchResultsPage","endpoint","url","console","log","response","get","data","error","message","fetchMovies","fetchDetails","fetch","json","fetchLatestMovies","page","params","api_key","sort_by","include_adult","results","fetchNowPlayingMovies"],"sources":["D:/projects/cine-mania/src/utils/tmdb.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = '64f9bdeee5357628887f2f71b6314b04';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchResultsPage = async (endpoint) => {\r\n  try {\r\n    const url = `${BASE_URL}${endpoint}&api_key=${API_KEY}`;\r\n    console.log('Request URL:', url);\r\n    const response = await axios.get(url);\r\n    console.log('API Response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst fetchMovies = async (endpoint) => {\r\n  try {\r\n    const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\r\n    console.log('Request URL:', url);\r\n    const response = await axios.get(url);\r\n    console.log('API Response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst fetchDetails = async (endpoint) => {\r\n  const response = await fetch(`https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}`);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const fetchLatestMovies = async (page = 1) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/discover/movie`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        sort_by: 'release_date.desc',\r\n        page: page,\r\n        include_adult: false,\r\n      },\r\n    });\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error('Error fetching latest movies:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchNowPlayingMovies = async () => {\r\n  return await fetchMovies('/movie/now_playing');\r\n};\r\n\r\nexport { fetchMovies, fetchResultsPage, fetchDetails };\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,8BAA8B;AAE/C,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,GAAG,GAAG,GAAGH,QAAQ,GAAGE,QAAQ,YAAYH,OAAO,EAAE;IACvDK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAAC;IAChC,MAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACJ,GAAG,CAAC;IACrCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC3C,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IAC3F,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAMC,WAAW,GAAG,MAAOT,QAAQ,IAAK;EACtC,IAAI;IACF,MAAMC,GAAG,GAAG,GAAGH,QAAQ,GAAGE,QAAQ,YAAYH,OAAO,EAAE;IACvDK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAAC;IAChC,MAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACJ,GAAG,CAAC;IACrCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC3C,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IAC3F,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAME,YAAY,GAAG,MAAOV,QAAQ,IAAK;EACvC,MAAMI,QAAQ,GAAG,MAAMO,KAAK,CAAC,+BAA+BX,QAAQ,YAAYH,OAAO,EAAE,CAAC;EAC1F,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,OAAON,IAAI;AACb,CAAC;AAED,OAAO,MAAMO,iBAAiB,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,KAAK;EACnD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,GAAGP,QAAQ,iBAAiB,EAAE;MAC7DiB,MAAM,EAAE;QACNC,OAAO,EAAEnB,OAAO;QAChBoB,OAAO,EAAE,mBAAmB;QAC5BH,IAAI,EAAEA,IAAI;QACVI,aAAa,EAAE;MACjB;IACF,CAAC,CAAC;IACF,OAAOd,QAAQ,CAACE,IAAI,CAACa,OAAO;EAC9B,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMa,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/C,OAAO,MAAMX,WAAW,CAAC,oBAAoB,CAAC;AAChD,CAAC;AAED,SAASA,WAAW,EAAEV,gBAAgB,EAAEW,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}