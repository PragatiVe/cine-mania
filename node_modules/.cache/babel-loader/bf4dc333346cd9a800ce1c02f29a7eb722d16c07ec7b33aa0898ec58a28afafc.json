{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\cine-mania\\\\src\\\\pages\\\\Trending.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { fetchMovies } from '../utils/tmdb';\n// import Carousel from '../components/Carousel';\n// import ScrollList from '../components/ScrollList';\n// import './Trending.css';\n\n// const Trending = () => {\n//     const [popularMovies, setPopularMovies] = useState([]);\n//     const [latestMovies, setLatestMovies] = useState([]);\n//     const [latestTVShows, setLatestTVShows] = useState([]);\n//     const [upcomingReleases, setUpcomingReleases] = useState([]);\n\n//     useEffect(() => {\n//         const getMovies = async () => {\n//             const data = await fetchMovies('/movie/popular');\n//             console.log('Fetched Movies Data:', data);\n//             if (data && data.results) {\n//                 setPopularMovies(data.results);\n//             } else {\n//                 console.error('No results found or data is null:', data);\n//             }\n//         };\n\n//         getMovies();\n//     }, []);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             const movies = await fetchMovies('latest-movies');\n//             const tvShows = await fetchMovies('latest-tv-shows');\n//             const upcoming = await fetchMovies('upcoming-releases');\n\n//             setLatestMovies(movies);\n//             setLatestTVShows(tvShows);\n//             setUpcomingReleases(upcoming);\n//         };\n\n//         fetchData();\n//     }, []);\n\n//     return (\n//         <div className='trending-container'>\n//             <div className=\"trending-section\">\n//                 <div className=\"trending-text\">\n//                     <h2>Explore what's Trending</h2>\n//                     <h5>Stay in the loop with trending picks!</h5>\n//                 </div>\n//                 <div className=\"trending-carousel\">\n//                     {popularMovies.length > 0 ? <Carousel movies={popularMovies} /> : <p>Loading...</p>}\n//                 </div>\n//             </div>\n//             <ScrollList title=\"Latest Movies\" movies={latestMovies} />\n//             <ScrollList title=\"Latest TV Shows\" movies={latestTVShows} />\n//             <ScrollList title=\"Upcoming Releases\" movies={upcomingReleases} />\n//             <div className=\"divider-line\"></div>\n//         </div>\n//     );\n// };\n\n// export default Trending;\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchMovies } from '../utils/tmdb';\nimport Carousel from '../components/Carousel';\nimport ScrollList from '../components/ScrollList';\nimport './Trending.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Trending = () => {\n  _s();\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [latestMovies, setLatestMovies] = useState([]);\n  const [latestTVShows, setLatestTVShows] = useState([]);\n  const [upcomingReleases, setUpcomingReleases] = useState([]);\n  const [loading, setLoading] = useState(true); // Added loading state\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        const popularData = await fetchMovies('/movie/popular');\n        const latestMoviesData = await fetchMovies('/movie/latest'); // Adjust endpoint if needed\n        const latestTVShowsData = await fetchMovies('/tv/latest'); // Adjust endpoint if needed\n        const upcomingReleasesData = await fetchMovies('/movie/upcoming'); // Adjust endpoint if needed\n\n        if (popularData && popularData.results) {\n          setPopularMovies(popularData.results);\n        } else {\n          console.error('No popular movies found');\n        }\n        if (latestMoviesData && latestMoviesData.results) {\n          setLatestMovies(latestMoviesData.results);\n        } else {\n          console.error('No latest movies found');\n        }\n        if (latestTVShowsData && latestTVShowsData.results) {\n          setLatestTVShows(latestTVShowsData.results);\n        } else {\n          console.error('No latest TV shows found');\n        }\n        if (upcomingReleasesData && upcomingReleasesData.results) {\n          setUpcomingReleases(upcomingReleasesData.results);\n        } else {\n          console.error('No upcoming releases found');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"trending-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trending-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Explore what's Trending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Stay in the loop with trending picks!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"trending-carousel\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 32\n        }, this) : popularMovies.length > 0 ? /*#__PURE__*/_jsxDEV(Carousel, {\n          movies: popularMovies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 79\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No trending movies found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 117\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollList, {\n      title: \"Latest Movies\",\n      movies: latestMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollList, {\n      title: \"Latest TV Shows\",\n      movies: latestTVShows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ScrollList, {\n      title: \"Upcoming Releases\",\n      movies: upcomingReleases\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n_s(Trending, \"BvIWZwWPPsm1lVqqQokz9xSZ+Yo=\");\n_c = Trending;\nexport default Trending;\nvar _c;\n$RefreshReg$(_c, \"Trending\");","map":{"version":3,"names":["React","useState","useEffect","fetchMovies","Carousel","ScrollList","jsxDEV","_jsxDEV","Trending","_s","popularMovies","setPopularMovies","latestMovies","setLatestMovies","latestTVShows","setLatestTVShows","upcomingReleases","setUpcomingReleases","loading","setLoading","fetchAllData","popularData","latestMoviesData","latestTVShowsData","upcomingReleasesData","results","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","movies","title","_c","$RefreshReg$"],"sources":["D:/projects/cine-mania/src/pages/Trending.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { fetchMovies } from '../utils/tmdb';\r\n// import Carousel from '../components/Carousel';\r\n// import ScrollList from '../components/ScrollList';\r\n// import './Trending.css';\r\n\r\n// const Trending = () => {\r\n//     const [popularMovies, setPopularMovies] = useState([]);\r\n//     const [latestMovies, setLatestMovies] = useState([]);\r\n//     const [latestTVShows, setLatestTVShows] = useState([]);\r\n//     const [upcomingReleases, setUpcomingReleases] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const getMovies = async () => {\r\n//             const data = await fetchMovies('/movie/popular');\r\n//             console.log('Fetched Movies Data:', data);\r\n//             if (data && data.results) {\r\n//                 setPopularMovies(data.results);\r\n//             } else {\r\n//                 console.error('No results found or data is null:', data);\r\n//             }\r\n//         };\r\n\r\n//         getMovies();\r\n//     }, []);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             const movies = await fetchMovies('latest-movies');\r\n//             const tvShows = await fetchMovies('latest-tv-shows');\r\n//             const upcoming = await fetchMovies('upcoming-releases');\r\n\r\n//             setLatestMovies(movies);\r\n//             setLatestTVShows(tvShows);\r\n//             setUpcomingReleases(upcoming);\r\n//         };\r\n\r\n//         fetchData();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <div className='trending-container'>\r\n//             <div className=\"trending-section\">\r\n//                 <div className=\"trending-text\">\r\n//                     <h2>Explore what's Trending</h2>\r\n//                     <h5>Stay in the loop with trending picks!</h5>\r\n//                 </div>\r\n//                 <div className=\"trending-carousel\">\r\n//                     {popularMovies.length > 0 ? <Carousel movies={popularMovies} /> : <p>Loading...</p>}\r\n//                 </div>\r\n//             </div>\r\n//             <ScrollList title=\"Latest Movies\" movies={latestMovies} />\r\n//             <ScrollList title=\"Latest TV Shows\" movies={latestTVShows} />\r\n//             <ScrollList title=\"Upcoming Releases\" movies={upcomingReleases} />\r\n//             <div className=\"divider-line\"></div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Trending;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { fetchMovies } from '../utils/tmdb';\r\nimport Carousel from '../components/Carousel';\r\nimport ScrollList from '../components/ScrollList';\r\nimport './Trending.css';\r\n\r\nconst Trending = () => {\r\n    const [popularMovies, setPopularMovies] = useState([]);\r\n    const [latestMovies, setLatestMovies] = useState([]);\r\n    const [latestTVShows, setLatestTVShows] = useState([]);\r\n    const [upcomingReleases, setUpcomingReleases] = useState([]);\r\n    const [loading, setLoading] = useState(true); // Added loading state\r\n\r\n    useEffect(() => {\r\n        const fetchAllData = async () => {\r\n            try {\r\n                const popularData = await fetchMovies('/movie/popular');\r\n                const latestMoviesData = await fetchMovies('/movie/latest'); // Adjust endpoint if needed\r\n                const latestTVShowsData = await fetchMovies('/tv/latest'); // Adjust endpoint if needed\r\n                const upcomingReleasesData = await fetchMovies('/movie/upcoming'); // Adjust endpoint if needed\r\n\r\n                if (popularData && popularData.results) {\r\n                    setPopularMovies(popularData.results);\r\n                } else {\r\n                    console.error('No popular movies found');\r\n                }\r\n\r\n                if (latestMoviesData && latestMoviesData.results) {\r\n                    setLatestMovies(latestMoviesData.results);\r\n                } else {\r\n                    console.error('No latest movies found');\r\n                }\r\n\r\n                if (latestTVShowsData && latestTVShowsData.results) {\r\n                    setLatestTVShows(latestTVShowsData.results);\r\n                } else {\r\n                    console.error('No latest TV shows found');\r\n                }\r\n\r\n                if (upcomingReleasesData && upcomingReleasesData.results) {\r\n                    setUpcomingReleases(upcomingReleasesData.results);\r\n                } else {\r\n                    console.error('No upcoming releases found');\r\n                }\r\n                \r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchAllData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='trending-container'>\r\n            <div className=\"trending-section\">\r\n                <div className=\"trending-text\">\r\n                    <h2>Explore what's Trending</h2>\r\n                    <h5>Stay in the loop with trending picks!</h5>\r\n                </div>\r\n                <div className=\"trending-carousel\">\r\n                    {loading ? <p>Loading...</p> : popularMovies.length > 0 ? <Carousel movies={popularMovies} /> : <p>No trending movies found</p>}\r\n                </div>\r\n            </div>\r\n            <ScrollList title=\"Latest Movies\" movies={latestMovies} />\r\n            <ScrollList title=\"Latest TV Shows\" movies={latestTVShows} />\r\n            <ScrollList title=\"Upcoming Releases\" movies={upcomingReleases} />\r\n            <div className=\"divider-line\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Trending;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}