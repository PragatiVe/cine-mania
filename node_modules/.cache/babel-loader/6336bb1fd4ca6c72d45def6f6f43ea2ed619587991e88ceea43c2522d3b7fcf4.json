{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\cine-mania\\\\src\\\\components\\\\MovieCard.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const MovieCard = ({ movie }) => {\n//   const navigate = useNavigate();\n\n//   const handleCardClick = (id) => {\n//     navigate(`/detail/${id}`);\n//   };\n\n//   const releaseYear = movie.release_date\n//     ? new Date(movie.release_date).getFullYear(): movie.first_air_date\n//     ? new Date(movie.first_air_date).getFullYear(): 'Unknown';\n\n//   return (\n//     <div className=\"movie-card\" onClick={handleCardClick}>\n//       <img\n//         src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'path/to/default-image.jpg'}\n//         alt={movie.title || movie.name || 'No title'}\n//         className=\"movie-card-image\"\n//       />\n//       <div className=\"movie-card-content\">\n//         <h3>{movie.title || movie.name}</h3>\n//         <p className=\"movie-release-year\">{releaseYear}</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default MovieCard;\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieCard = ({\n  movie,\n  type\n}) => {\n  _s();\n  // Added type prop\n  const navigate = useNavigate();\n  const handleCardClick = () => {\n    if (type !== 'movie' && type !== 'tv') {\n      console.error('Invalid type:', type);\n      return;\n    }\n    navigate(`/details/${type}/${movie.id}`);\n  };\n  const releaseYear = movie.release_date ? new Date(movie.release_date).getFullYear() : movie.first_air_date ? new Date(movie.first_air_date).getFullYear() : 'Unknown';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-card\",\n    onClick: handleCardClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'path/to/default-image.jpg',\n      alt: movie.title || movie.name || 'No title',\n      className: \"movie-card-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.title || movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie-release-year\",\n        children: releaseYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = MovieCard;\nexport default MovieCard;\nvar _c;\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","MovieCard","movie","type","_s","navigate","handleCardClick","console","error","id","releaseYear","release_date","Date","getFullYear","first_air_date","className","onClick","children","src","poster_path","alt","title","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/projects/cine-mania/src/components/MovieCard.js"],"sourcesContent":["// import React from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const MovieCard = ({ movie }) => {\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleCardClick = (id) => {\r\n//     navigate(`/detail/${id}`);\r\n//   };\r\n\r\n//   const releaseYear = movie.release_date\r\n//     ? new Date(movie.release_date).getFullYear(): movie.first_air_date\r\n//     ? new Date(movie.first_air_date).getFullYear(): 'Unknown';\r\n\r\n//   return (\r\n//     <div className=\"movie-card\" onClick={handleCardClick}>\r\n//       <img\r\n//         src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'path/to/default-image.jpg'}\r\n//         alt={movie.title || movie.name || 'No title'}\r\n//         className=\"movie-card-image\"\r\n//       />\r\n//       <div className=\"movie-card-content\">\r\n//         <h3>{movie.title || movie.name}</h3>\r\n//         <p className=\"movie-release-year\">{releaseYear}</p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MovieCard;\r\n\r\n\r\nimport React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst MovieCard = ({ movie, type }) => {  // Added type prop\r\n  const navigate = useNavigate();\r\n\r\n  const handleCardClick = () => {\r\n    if (type !== 'movie' && type !== 'tv') {\r\n      console.error('Invalid type:', type);\r\n      return;\r\n    }\r\n    navigate(`/details/${type}/${movie.id}`);\r\n  };\r\n\r\n  const releaseYear = movie.release_date\r\n    ? new Date(movie.release_date).getFullYear()\r\n    : movie.first_air_date\r\n    ? new Date(movie.first_air_date).getFullYear()\r\n    : 'Unknown';\r\n\r\n  return (\r\n    <div className=\"movie-card\" onClick={handleCardClick}>\r\n      <img\r\n        src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'path/to/default-image.jpg'}\r\n        alt={movie.title || movie.name || 'No title'}\r\n        className=\"movie-card-image\"\r\n      />\r\n      <div className=\"movie-card-content\">\r\n        <h3>{movie.title || movie.name}</h3>\r\n        <p className=\"movie-release-year\">{releaseYear}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAAG;EACxC,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIH,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,IAAI,EAAE;MACrCI,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEL,IAAI,CAAC;MACpC;IACF;IACAE,QAAQ,CAAC,YAAYF,IAAI,IAAID,KAAK,CAACO,EAAE,EAAE,CAAC;EAC1C,CAAC;EAED,MAAMC,WAAW,GAAGR,KAAK,CAACS,YAAY,GAClC,IAAIC,IAAI,CAACV,KAAK,CAACS,YAAY,CAAC,CAACE,WAAW,CAAC,CAAC,GAC1CX,KAAK,CAACY,cAAc,GACpB,IAAIF,IAAI,CAACV,KAAK,CAACY,cAAc,CAAC,CAACD,WAAW,CAAC,CAAC,GAC5C,SAAS;EAEb,oBACEb,OAAA;IAAKe,SAAS,EAAC,YAAY;IAACC,OAAO,EAAEV,eAAgB;IAAAW,QAAA,gBACnDjB,OAAA;MACEkB,GAAG,EAAEhB,KAAK,CAACiB,WAAW,GAAG,kCAAkCjB,KAAK,CAACiB,WAAW,EAAE,GAAG,2BAA4B;MAC7GC,GAAG,EAAElB,KAAK,CAACmB,KAAK,IAAInB,KAAK,CAACoB,IAAI,IAAI,UAAW;MAC7CP,SAAS,EAAC;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACF1B,OAAA;MAAKe,SAAS,EAAC,oBAAoB;MAAAE,QAAA,gBACjCjB,OAAA;QAAAiB,QAAA,EAAKf,KAAK,CAACmB,KAAK,IAAInB,KAAK,CAACoB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpC1B,OAAA;QAAGe,SAAS,EAAC,oBAAoB;QAAAE,QAAA,EAAEP;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9BIH,SAAS;EAAA,QACIH,WAAW;AAAA;AAAA6B,EAAA,GADxB1B,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}