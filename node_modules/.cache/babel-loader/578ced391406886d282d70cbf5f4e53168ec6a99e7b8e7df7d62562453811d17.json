{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = '64f9bdeee5357628887f2f71b6314b04';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst fetchResultsPage = async endpoint => {\n  try {\n    const url = `${BASE_URL}${endpoint}&api_key=${API_KEY}`;\n    console.log('Request URL:', url);\n    const response = await axios.get(url);\n    console.log('API Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\n    return null;\n  }\n};\nconst fetchMovies = async endpoint => {\n  try {\n    const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\n    console.log('Request URL:', url);\n    const response = await axios.get(url);\n    console.log('API Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\n    return null;\n  }\n};\nconst fetchDetails = async endpoint => {\n  const response = await fetch(`https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n};\nconst fetchLatestMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching latest movies:', error);\n  }\n};\nconst fetchLatestTVShows = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/tv/on_the_air?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching latest TV shows:', error);\n  }\n};\nconst fetchUpcomingMoviesAndTVShows = async () => {\n  try {\n    const currentDate = new Date().toISOString().split('T')[0];\n    const upcomingMoviesResponse = await axios.get(`${BASE_URL}/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=release_date.asc&release_date.gte=${currentDate}&include_adult=false`);\n    const upcomingMovies = upcomingMoviesResponse.data.results;\n    const upcomingTVShowsResponse = await axios.get(`${BASE_URL}/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=first_air_date.asc&first_air_date.gte=${currentDate}&include_adult=false`);\n    const upcomingTVShows = upcomingTVShowsResponse.data.results;\n    const upcomingReleases = [...upcomingMovies, ...upcomingTVShows];\n    return upcomingReleases;\n  } catch (error) {\n    console.error('Error fetching upcoming movies and TV shows:', error);\n    return [];\n  }\n};\nexport { fetchMovies, fetchResultsPage, fetchDetails, fetchLatestMovies, fetchLatestTVShows, fetchUpcomingMoviesAndTVShows };","map":{"version":3,"names":["axios","API_KEY","BASE_URL","fetchResultsPage","endpoint","url","console","log","response","get","data","error","message","fetchMovies","fetchDetails","fetch","json","fetchLatestMovies","results","fetchLatestTVShows","fetchUpcomingMoviesAndTVShows","currentDate","Date","toISOString","split","upcomingMoviesResponse","upcomingMovies","upcomingTVShowsResponse","upcomingTVShows","upcomingReleases"],"sources":["D:/projects/cine-mania/src/utils/tmdb.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = '64f9bdeee5357628887f2f71b6314b04';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchResultsPage = async (endpoint) => {\r\n  try {\r\n    const url = `${BASE_URL}${endpoint}&api_key=${API_KEY}`;\r\n    console.log('Request URL:', url);\r\n    const response = await axios.get(url);\r\n    console.log('API Response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst fetchMovies = async (endpoint) => {\r\n  try {\r\n    const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\r\n    console.log('Request URL:', url);\r\n    const response = await axios.get(url);\r\n    console.log('API Response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst fetchDetails = async (endpoint) => {\r\n  const response = await fetch(`https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}`);\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nconst fetchLatestMovies = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/movie/now_playing?api_key=${API_KEY}&language=en-US&page=1`\r\n    );\r\n    return response.data.results; \r\n  } catch (error) {\r\n    console.error('Error fetching latest movies:', error);\r\n  }\r\n};\r\n\r\nconst fetchLatestTVShows = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${BASE_URL}/tv/on_the_air?api_key=${API_KEY}&language=en-US&page=1`\r\n    );\r\n    return response.data.results;\r\n  } catch (error) {\r\n    console.error('Error fetching latest TV shows:', error);\r\n  }\r\n};\r\n\r\nconst fetchUpcomingMoviesAndTVShows = async () => {\r\n  try {\r\n    const currentDate = new Date().toISOString().split('T')[0]; \r\n\r\n    const upcomingMoviesResponse = await axios.get(\r\n      `${BASE_URL}/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=release_date.asc&release_date.gte=${currentDate}&include_adult=false`\r\n    );\r\n    const upcomingMovies = upcomingMoviesResponse.data.results;\r\n\r\n    const upcomingTVShowsResponse = await axios.get(\r\n      `${BASE_URL}/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=first_air_date.asc&first_air_date.gte=${currentDate}&include_adult=false`\r\n    );\r\n    const upcomingTVShows = upcomingTVShowsResponse.data.results;\r\n\r\n    const upcomingReleases = [...upcomingMovies, ...upcomingTVShows];\r\n\r\n    return upcomingReleases;\r\n  } catch (error) {\r\n    console.error('Error fetching upcoming movies and TV shows:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport { fetchMovies, fetchResultsPage, fetchDetails , fetchLatestMovies, fetchLatestTVShows, fetchUpcomingMoviesAndTVShows};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}