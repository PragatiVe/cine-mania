{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = '64f9bdeee5357628887f2f71b6314b04';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst fetchResultsPage = async endpoint => {\n  try {\n    const url = `${BASE_URL}${endpoint}&api_key=${API_KEY}`;\n    console.log('Request URL:', url);\n    const response = await axios.get(url);\n    console.log('API Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\n    return null;\n  }\n};\nconst fetchMovies = async endpoint => {\n  try {\n    const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`;\n    console.log('Request URL:', url);\n    const response = await axios.get(url);\n    console.log('API Response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\n    return null;\n  }\n};\nconst fetchDetails = async endpoint => {\n  const response = await fetch(`https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n};\nconst fetchTrending = async endpoint => {\n  try {\n    const response = await fetch(`${BASE_URL}${endpoint}?api_key=${API_KEY}`);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching trending data:', error);\n    return null;\n  }\n};\nexport { fetchMovies, fetchResultsPage, fetchDetails, fetchTrending };","map":{"version":3,"names":["axios","API_KEY","BASE_URL","fetchResultsPage","endpoint","url","console","log","response","get","data","error","message","fetchMovies","fetchDetails","fetch","json","fetchTrending","ok","Error"],"sources":["D:/projects/cine-mania/src/utils/tmdb.js"],"sourcesContent":["\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = '64f9bdeee5357628887f2f71b6314b04';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nconst fetchResultsPage = async (endpoint) => {\r\n  try {\r\n    const url = `${BASE_URL}${endpoint}&api_key=${API_KEY}`;\r\n    console.log('Request URL:', url); \r\n    const response = await axios.get(url);\r\n    console.log('API Response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error.response ? error.response.data : error.message);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst fetchMovies = async (endpoint) => {\r\n    try {\r\n      const url = `${BASE_URL}${endpoint}?api_key=${API_KEY}`; \r\n      console.log('Request URL:', url);\r\n      const response = await axios.get(url);\r\n      console.log('API Response:', response.data); \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error.response ? error.response.data : error.message);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  const fetchDetails = async (endpoint) => {\r\n    const response = await fetch(`https://api.themoviedb.org/3${endpoint}?api_key=${API_KEY}`);\r\n    const data = await response.json();\r\n    return data;\r\n  };\r\n\r\n  const fetchTrending = async (endpoint) => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}${endpoint}?api_key=${API_KEY}`);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching trending data:', error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  export { fetchMovies, fetchResultsPage, fetchDetails, fetchTrending };\r\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,8BAA8B;AAE/C,MAAMC,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,GAAG,GAAG,GAAGH,QAAQ,GAAGE,QAAQ,YAAYH,OAAO,EAAE;IACvDK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAAC;IAChC,MAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACJ,GAAG,CAAC;IACrCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC3C,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IAC3F,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAMC,WAAW,GAAG,MAAOT,QAAQ,IAAK;EACpC,IAAI;IACF,MAAMC,GAAG,GAAG,GAAGH,QAAQ,GAAGE,QAAQ,YAAYH,OAAO,EAAE;IACvDK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAAC;IAChC,MAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACJ,GAAG,CAAC;IACrCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC3C,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IAC3F,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAME,YAAY,GAAG,MAAOV,QAAQ,IAAK;EACvC,MAAMI,QAAQ,GAAG,MAAMO,KAAK,CAAC,+BAA+BX,QAAQ,YAAYH,OAAO,EAAE,CAAC;EAC1F,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAClC,OAAON,IAAI;AACb,CAAC;AAED,MAAMO,aAAa,GAAG,MAAOb,QAAQ,IAAK;EACxC,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMO,KAAK,CAAC,GAAGb,QAAQ,GAAGE,QAAQ,YAAYH,OAAO,EAAE,CAAC;IACzE,IAAI,CAACO,QAAQ,CAACU,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAON,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;AACF,CAAC;AAED,SAASE,WAAW,EAAEV,gBAAgB,EAAEW,YAAY,EAAEG,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}