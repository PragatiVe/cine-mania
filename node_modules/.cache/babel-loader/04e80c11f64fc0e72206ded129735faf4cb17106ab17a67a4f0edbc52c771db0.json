{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\cine-mania\\\\src\\\\pages\\\\SearchResults.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchResultsPage } from '../utils/tmdb';\nimport MovieCard from '../components/MovieCard';\nimport './SearchResults.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchResults = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  const location = useLocation();\n  useEffect(() => {\n    const searchQuery = new URLSearchParams(location.search).get('q');\n    const fetchResults = async () => {\n      if (searchQuery) {\n        try {\n          const data = await fetchResultsPage(`/search/multi?query=${searchQuery}`);\n          console.log('API Response:', data);\n          if (data && data.results) {\n            setResults(data.results);\n          } else {\n            console.error('No results found in response');\n          }\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      }\n    };\n    fetchResults();\n  }, [location.search]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-results\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-list\",\n      children: results.map(item => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchResults, \"YKZjNpZ70c6qO21uuL9LmG6Bf3Y=\", false, function () {\n  return [useLocation];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","fetchResultsPage","MovieCard","jsxDEV","_jsxDEV","SearchResults","_s","results","setResults","location","searchQuery","URLSearchParams","search","get","fetchResults","data","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","movie","id","_c","$RefreshReg$"],"sources":["D:/projects/cine-mania/src/pages/SearchResults.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { fetchResultsPage } from '../utils/tmdb';\r\nimport MovieCard from '../components/MovieCard';\r\nimport './SearchResults.css';\r\n\r\nconst SearchResults = () => {\r\n  const [results, setResults] = useState([]);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const searchQuery = new URLSearchParams(location.search).get('q');\r\n  const fetchResults = async () => {\r\n    if (searchQuery) {\r\n      try {\r\n        const data = await fetchResultsPage(`/search/multi?query=${searchQuery}`);\r\n        console.log('API Response:', data); \r\n        if (data && data.results) {\r\n          setResults(data.results);\r\n        } else {\r\n          console.error('No results found in response');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n    fetchResults();\r\n  }, [location.search]);\r\n\r\n  return (\r\n    <div className=\"search-results\">\r\n      <h1>Search Results</h1>\r\n      <div className=\"results-list\">\r\n        {results.map((item) => (\r\n          <MovieCard key={item.id} movie={item} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMY,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,CAAC,GAAG,CAAC;IACnE,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIJ,WAAW,EAAE;QACf,IAAI;UACF,MAAMK,IAAI,GAAG,MAAMd,gBAAgB,CAAC,uBAAuBS,WAAW,EAAE,CAAC;UACzEM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC;UAClC,IAAIA,IAAI,IAAIA,IAAI,CAACR,OAAO,EAAE;YACxBC,UAAU,CAACO,IAAI,CAACR,OAAO,CAAC;UAC1B,CAAC,MAAM;YACLS,OAAO,CAACE,KAAK,CAAC,8BAA8B,CAAC;UAC/C;QACF,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC9C;MACF;IACF,CAAC;IAECJ,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACL,QAAQ,CAACG,MAAM,CAAC,CAAC;EAErB,oBACER,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBpB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1Bb,OAAO,CAACkB,GAAG,CAAEC,IAAI,iBAChBtB,OAAA,CAACF,SAAS;QAAeyB,KAAK,EAAED;MAAK,GAArBA,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CACxC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAnCID,aAAa;EAAA,QAEAL,WAAW;AAAA;AAAA6B,EAAA,GAFxBxB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}