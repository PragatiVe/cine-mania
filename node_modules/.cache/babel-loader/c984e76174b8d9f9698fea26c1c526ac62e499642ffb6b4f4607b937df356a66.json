{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\cine-mania\\\\src\\\\pages\\\\DetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieDetails, fetchTVShowDetails } from '../utils/tmdb'; // Import your API functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DetailPage = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the ID from URL parameters\n  const [details, setDetails] = useState(null);\n  const [mediaType, setMediaType] = useState(null); // Track whether it's a movie or TV show\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        // Fetch movie or TV show details based on the ID and media type\n        const movieData = await fetchMovieDetails(`/movie/${id}`);\n        const tvShowData = await fetchTVShowDetails(`/tv/${id}`);\n        if (movieData) {\n          setDetails(movieData);\n          setMediaType('movie');\n        } else if (tvShowData) {\n          setDetails(tvShowData);\n          setMediaType('tv');\n        }\n      } catch (error) {\n        console.error('Error fetching details:', error);\n      }\n    };\n    fetchDetails();\n  }, [id]);\n  if (!details) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: details.title || details.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w500${details.poster_path}`,\n        alt: details.title || details.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }, this), \" \", details.release_date || details.first_air_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 14\n          }, this), \" \", details.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Overview:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 14\n          }, this), \" \", details.overview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Genres:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 14\n          }, this), \" \", details.genres.map(genre => genre.name).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Languages:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 14\n          }, this), \" \", details.spoken_languages.map(lang => lang.name).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DetailPage, \"dL4RwgmAbQRulcbP7unYgICRapI=\", false, function () {\n  return [useParams];\n});\n_c = DetailPage;\nexport default DetailPage;\nvar _c;\n$RefreshReg$(_c, \"DetailPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","fetchMovieDetails","fetchTVShowDetails","jsxDEV","_jsxDEV","DetailPage","_s","id","details","setDetails","mediaType","setMediaType","fetchDetails","movieData","tvShowData","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","name","src","poster_path","alt","release_date","first_air_date","vote_average","overview","genres","map","genre","join","spoken_languages","lang","_c","$RefreshReg$"],"sources":["D:/projects/cine-mania/src/pages/DetailPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieDetails, fetchTVShowDetails } from '../utils/tmdb'; // Import your API functions\r\n\r\nconst DetailPage = () => {\r\n  const { id } = useParams(); // Get the ID from URL parameters\r\n  const [details, setDetails] = useState(null);\r\n  const [mediaType, setMediaType] = useState(null); // Track whether it's a movie or TV show\r\n\r\n  useEffect(() => {\r\n    const fetchDetails = async () => {\r\n      try {\r\n        // Fetch movie or TV show details based on the ID and media type\r\n        const movieData = await fetchMovieDetails(`/movie/${id}`);\r\n        const tvShowData = await fetchTVShowDetails(`/tv/${id}`);\r\n\r\n        if (movieData) {\r\n          setDetails(movieData);\r\n          setMediaType('movie');\r\n        } else if (tvShowData) {\r\n          setDetails(tvShowData);\r\n          setMediaType('tv');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching details:', error);\r\n      }\r\n    };\r\n\r\n    fetchDetails();\r\n  }, [id]);\r\n\r\n  if (!details) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"detail-page\">\r\n      <h1>{details.title || details.name}</h1>\r\n      <div className=\"detail-content\">\r\n        <img \r\n          src={`https://image.tmdb.org/t/p/w500${details.poster_path}`} \r\n          alt={details.title || details.name} \r\n        />\r\n        <div className=\"detail-info\">\r\n          <p><strong>Release Date:</strong> {details.release_date || details.first_air_date}</p>\r\n          <p><strong>Rating:</strong> {details.vote_average}</p>\r\n          <p><strong>Overview:</strong> {details.overview}</p>\r\n          <p><strong>Genres:</strong> {details.genres.map(genre => genre.name).join(', ')}</p>\r\n          <p><strong>Languages:</strong> {details.spoken_languages.map(lang => lang.name).join(', ')}</p>\r\n          {/* Add more details as needed */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}